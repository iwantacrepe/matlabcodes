clc     
clear all
A=[1 2;1 1;0 1]
B=[2000;1500;600]
C=[3 5]

x=0:max(B)

z1=(B(1)-A(1,1)*x)/A(1,2)
z2=(B(2)-A(2,1)*x)/A(2,2)
z3=(B(3)-A(3,1)*x)/A(3,2)

z1=max(0,z1)
z2=max(0,z2)
z3=max(0,z3)

plot(x,z1,'g',x,z2,'r',x,z3,'b')
xlabel('x1')
ylabel('x2')
legend('-x1+3x2=10','x1+x2=6','x1-x2=2')
        
cx=find(x==0)
c1=find(z1==0)
c2=find(z2==0)
c3=find(z3==0)
line1=[x([cx,c1]);z1([cx,c1])]'
line2=[x([cx,c2]);z2([cx,c2])]'
line3=[x([cx,c3]);z3([cx,c3])]'
cpt=unique([line1;line2;line3],'rows')

ptt=[0;0];
for i=1:size(A,1)
    A1=A(i,:)
    B1=B(i)
    for j=i+1:size(A,1)
        A2=A(j,:)
        B2=B(j)
        A4=[A1;A2]
        B4=[B1;B2]
        x=A4\B4
        ptt=[ptt x]
    end
end    
ict=ptt'
point=unique([cpt;ict],'rows')
feasible_points = []

for i = 1:size(point,1)
    constraint1 = A(1,1)*point(i,1) + A(1,2)*point(i,2) - B(1)
    constraint2 = A(2,1)*point(i,1) + A(2,2)*point(i,2) - B(2)
    constraint3 = A(3,1)*point(i,1) + A(3,2)*point(i,2) - B(3)
    
    if constraint1 <=0 && constraint2 <=0 && constraint3 <=0
        feasible_points = [feasible_points; point(i,:)]
    end
end

value = feasible_points * C'
table = [feasible_points value]
obj = max(value)
[obj, index] = max(value)
x1 = feasible_points(index, 1)
x2 = feasible_points(index, 2)
fprintf("The optimal value of the function is %f at (%f,%f)", obj, x1, x2)

To handle Snowflake’s case sensitivity (where unquoted identifiers are automatically converted to uppercase), and Vertica’s case-insensitive behavior, we need to make the following adjustments:

✅ Key Requirements

1. Snowflake column names should be resolved to UPPERCASE, since they are case-sensitive.


2. Vertica can accept lowercase or any case, so no need to change anything there.


3. When constructing the SQL query for Snowflake, all column references should be quoted and in UPPERCASE.


4. resolve_columns() should return column names in UPPERCASE if they will be used with Snowflake.




---

✅ Change in resolve_columns():

Modify it to return UPPERCASE names for Snowflake:

def resolve_columns(requested, actual, force_upper=False):
    resolved = []
    actual_map = {col.casefold(): col for col in actual}
    for col in requested:
        if col.casefold() not in actual_map:
            raise ValueError(f"Column '{col}' not found in table")
        resolved_name = actual_map[col.casefold()]
        if force_upper:
            resolved_name = resolved_name.upper()
        resolved.append(resolved_name)
    return resolved


---

✅ Change in compare_table():

Update resolve_columns() calls to force_upper=True for Snowflake compatibility:

keys = resolve_columns(key_cols, all_cols, force_upper=True)
    excludes = resolve_columns(exclude_cols, all_cols, force_upper=True) if exclude_cols else []
    filters = resolve_columns(filter_cols, all_cols, force_upper=True) if filter_cols else []


---

✅ Final Adjustments in compare_table():

Make sure column references in build_outer_join_query() use UPPERCASE versions:

This is already ensured since you're passing columns and keys that are now forced to uppercase.


---

✅ Optional Logging (for verification):

Add a debug print for all resolved columns:

print(f"[DEBUG] Compare columns (Snowflake UPPERCASE): {compare_cols}")


---

With this, your Snowflake columns will always be in uppercase quoted format, avoiding errors like column not found due to case mismatch. The Vertica side doesn’t need any special case handling because it treats column names as case-insensitive by default.

Let me know if you want this logic applied to the get_columns() function as well for consistency.


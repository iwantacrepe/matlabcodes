#include <bits/stdc++.h>
using namespace std;

int pagesInCache(int X, int N, int page[]) {
    vector<int> cacheList;
    int hitCount = 0;
    for (int i = 0; i < N; i++) {
        int p = page[i];
        auto it = find(cacheList.begin(), cacheList.end(), p);
        if (it != cacheList.end()) {
            hitCount++;
            cacheList.erase(it);
        }
        cacheList.insert(cacheList.begin(), p);
        if ((int)cacheList.size() > X) {
            cacheList.pop_back();
        }
        for (int j = 0; j < X; j++) {
            if (j > 0) {
                cout << ' ';
            }
            if (j < (int)cacheList.size()) {
                cout << cacheList[j];
            } else {
                cout << 0;
            }
        }
        cout << '\n';
    }
    return (hitCount * 100) / N;
}
